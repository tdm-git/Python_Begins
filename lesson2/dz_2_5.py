from copy import deepcopy
# Создать вручную список, содержащий цены на товары (10–20 товаров), например:[57.8, 46.51, 97, ...]
my_list = [10, 15.23, 356, 8.2, 34.5, 78.01, 33, 56, 3.56, 79.9, 20, 54.78, 12.34, 14.05, 79.99]

# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп
# (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например,
# получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
result = ''
for i in my_list:
    result += f' {int(i // 1)} руб {int(100 * round((i % 1),2)// 1):02d} коп,'
print(result)
print("-" * 50)

# Вывести цены, отсортированные по возрастанию, новый список не создавать
# (доказать, что объект списка после сортировки остался тот же).
print(my_list)
print(id(my_list))
my_list.sort()
print(my_list)
print(id(my_list))
print("-" * 50)

# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
new_list = deepcopy(my_list)  # для демонстрации работы с новым материалом, используем внешнюю функцию,
# но т.к. список состоит из чисел то и срез и копирование тоже подойдут
# new_list = my_list[:] и new_list = my_list.copy(), проверил тоже дают новый id()
new_list.sort(reverse=True)
print('новый список с обратной сортировкой - ', new_list)
print(id(new_list))
print("-" * 50)

# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
print('5 самых дорогих товаров:', sorted(my_list, reverse=True)[:5])
